---
import { Icon } from "astro-icon/components";
import axios from "axios";

const { endpoint } = Astro.props;
const getAllTasks = await axios
  .get(endpoint)
  .then((response) => response.data)
  .catch((error) => console.log(error));

console.log(getAllTasks);
---

<div
  x-data=`{tasks: ${JSON.stringify(getAllTasks)} || ''}`
  class="flex h-screen"
>
  <div class="flex-1 p-4">
    <h2 class="text-xl font-semibold mb-4">Tareas No Completadas</h2>
    <template x-for="task in tasks.filter(t => t.completed === false)">
      <div x-sort:item class="bg-white p-4 rounded-lg shadow-lg mb-4 relative">
        <h3 class="text-lg font-bold" x-text="task.title"></h3>
        <p class="text-gray-600" x-text="task.description"></p>
        <span
          class="inline-block mt-2 text-white text-xs px-2 py-1 rounded-full"
          x-text="task.completed ? 'Completado' : 'Sin completar'"
          :class="task.completed ? 'bg-green-500' : 'bg-red-500'"></span>
        <div x-data="{isListOptionsOpen : false}">
          <button
            @click="isListOptionsOpen = !isListOptionsOpen"
            class="absolute cursor-pointer top-12 right-4 text-gray-600 hover:text-gray-800 focus:outline-none"
          >
            <Icon name="shared/options" />
          </button>
          <div
            @click.outside="isListOptionsOpen = false"
            x-show="isListOptionsOpen"
            class="absolute top-8 right-4 bg-white shadow-md rounded-lg w-40 group-hover:block"
          >
            <ul class="text-sm">
              <li>
                <a
                  @click.prevent="isUpdateWindowOpen = true, id = task.id, title = task.title, description = task.description, completed = task.completed"
                  class="block px-4 py-2 text-gray-600 hover:bg-gray-200"
                  >Editar</a>
              </li>
              <li>
                <a
                  @click.prevent="isDeleteWindowOpen = true, id = task.id"
                  class="block px-4 py-2 text-gray-600 hover:bg-gray-200"
                  >Eliminar</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </template>
  </div>
  <div class="w-px bg-gray-300"></div>

  <div class="flex-1 p-4">
    <h2 class="text-xl font-semibold mb-4">Tareas Completadas</h2>
    <template x-for="task in tasks.filter(t => t.completed === true)">
      <div class="bg-white p-4 rounded-lg shadow-lg mb-4 relative">
        <h3 class="text-lg font-bold" x-text="task.title"></h3>
        <p class="text-gray-600" x-text="task.description"></p>
        <span
          class="inline-block mt-2 text-white text-xs px-2 py-1 rounded-full"
          x-text="task.completed ? 'Completado' : 'Sin completar'"
          :class="task.completed ? 'bg-green-500' : 'bg-red-500'"></span>
        <div x-data="{isListOptionsOpen : false}">
          <button
            @click="isListOptionsOpen = !isListOptionsOpen"
            class="absolute cursor-pointer top-12 right-4 text-gray-600 hover:text-gray-800 focus:outline-none"
          >
            <Icon name="shared/options" />
          </button>
          <div
            @click.outside="isListOptionsOpen = false"
            x-show="isListOptionsOpen"
            class="absolute top-8 right-4 bg-white shadow-md rounded-lg w-40 group-hover:block"
          >
            <ul class="text-sm">
              <li>
                <a
                  @click.prevent="isUpdateWindowOpen = true, id = task.id, title = task.title, description = task.description, completed = task.completed"
                  class="block px-4 py-2 text-gray-600 hover:bg-gray-200"
                  >Editar</a>
              </li>
              <li>
                <a
                  @click.prevent="isDeleteWindowOpen = true, id = task.id"
                  class="block px-4 py-2 text-gray-600 hover:bg-gray-200"
                  >Eliminar</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </template>
  </div>
</div>
